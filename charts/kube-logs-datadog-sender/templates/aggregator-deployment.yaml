---

apiVersion: apps/v1
kind: Deployment

metadata:
  name: vector-logs-aggregator
  namespace: {{ .Values.targetNamespace }}

spec:
  selector:
    matchLabels:
      name: vector-logs-aggregator
  template:
    metadata:
      labels:
        name: vector-logs-aggregator
    spec:
      serviceAccountName: vector
      containers:
        - name: vector-logs-aggregator
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          args: [ "--config-dir", "/etc/vector/" ]
          ports:
            - containerPort: {{ .Values.vector.api.port }}
            - containerPort: {{ .Values.vector.aggregator.source.port }}
          envFrom:
            - secretRef:
                name: {{ .Values.datadog.secretName }}
          volumeMounts:
            - mountPath: /etc/vector
              name: config
          livenessProbe:
            httpGet:
              # Rely on Vector's health endpoint to determine if the container is healthy.
              path: /health
              port: {{ .Values.vector.api.port }}
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            requests:
              memory: "100Mi"
              cpu: "100m"
          securityContext:
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: config
          configMap:
            name: vector-logs-aggregator-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service

metadata:
  name: {{ .Values.vector.aggregator.service.name }}

spec:
  selector:
    name: vector-logs-aggregator
  ports:
    - name: source
      port: {{ .Values.vector.aggregator.source.port }}
      targetPort: {{ .Values.vector.aggregator.source.port }}
